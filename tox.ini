[tox]
allowlist_externals=./check_woke.sh
skipsdist=True
envlist = lint, woke, unit, functional
skip_missing_interpreters = True

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report
setenv =
  PYTHONPATH={toxinidir}/src:{toxinidir}:lib

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    pytest-asyncio
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
commands = flake8 src/ tests/ lib/
# Pin flake8 to 3.7.9 to match focal
deps =
    flake8==3.7.9

[testenv:woke]
description = Run woke to check for inclusive language
commands =
    ./check_woke.sh

[flake8]
exclude =
    .git,
    __pycache__,
    .tox,
# Ignore E231, W503 because using black creates errors with this
ignore = E231, W503
max-line-length = 99
max-complexity = 10
